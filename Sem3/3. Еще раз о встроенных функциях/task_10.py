"""Простейшие встроенные функции"""

# Принимает Unicode-символ и возвращает соответствующий код (целое число)
print(ord("g"))  # -> 103

# Принимает целое число и возвращает Unicode-символ,
# соответствующий переданному числу (коду)
print(chr(103))  # -> g

# Принимает любой объект-последовательность (строка, набор байтов, список, кортеж)
# или объект-коллекцию (словарь, множество) и возвращает число элементов последовательности
print(len("abracadabra"))  # -> 11

# Принимает целое число или число с плавающей точкой.
# Возвращает абсолютное значение числа (по модулю)
print(abs(2))  # -> 2
print(abs(-2))  # -> 2

# Принимает число с плавающей точкой.
# Округляет число до ближайшего целого числа.
# Также может принимать число знаков после запятой, до которых необходимо выполнить округление
print(round(2.6743))  # -> 3
print(round(-2.678))  # -> -3
print(round(2.6743, 2))  # -> 2.67
print(round(-2.678, 2))  # -> -2.68

# Принимает два числа, возвращает также два числа
# (частное и остаток от деления чисел)
print(divmod(4, 2))  # -> (2, 0)
print(divmod(5, 2))  # -> (2, 1)

# Принимает два числа. Позволяет возвести первое число в указанную степень
print(pow(2, 4))  # -> 16

# Принимает итерируемый объект и возвращает самый большой элемент
iter_obj = [20, 2, 5, 100]
print(max(iter_obj))  # -> 100
iter_obj = (20, 2, 5, 100)
print(max(iter_obj))  # -> 100
iter_obj = "abrakadabra"
print(max(iter_obj))  # -> r

# Принимает итерируемый объект и возвращает наименьший элемент
iter_obj = [20, 2, 5, 100]
print(min(iter_obj))  # -> 2
iter_obj = (20, 2, 5, 100)
print(min(iter_obj))  # -> 2
iter_obj = "abrakadabra"
print(min(iter_obj))  # -> a

# Суммирует элементы последовательности
iter_obj = [20, 2, 5, 100]
print(sum(iter_obj))  # -> 127
iter_obj = (20, 2, 5, 100)
print(sum(iter_obj))  # -> 127
