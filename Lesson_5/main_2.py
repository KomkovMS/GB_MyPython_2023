"""
Изображаем статистические отношения
Scatterplot (Точечный график)
Математическая диаграмма, изображающая значения двух переменных в виде
точек на декартовой плоскости. Библиотека seaborn без труда принимает pandas
DataFrame(таблицу). Чтобы изобразить отношения между двумя столбцами
достаточно указать, какой столбец отобразить по оси x, а какой по оси y.
"""
import seaborn as sns
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('sample_data/california_housing_train.csv')

# Для того чтобы начать работу с библиотекой seaborn, ее необходимо
# импортировать к себе в программу:

import seaborn as sns

# Вернемся к нашей таблице. Можно заметить, что дома расположены в
# определенной "полосе" долготы и широты.
# Изображение точек долготы по отношению к широте:


print(sns.scatterplot(data=df, x="longitude", y="latitude"))
"""
Axes(0.125,0.11;0.775x0.77)
"""
# plt.show()

print('*' * 79)
# Помимо двумерных отношений, мы можем добавить "дополнительное измерение" с
# помощью цвета. В данном случае опять же достаточно очевидное отношение, чем
# выше кол-во семей, тем выше кол-во людей и соответственно комнат.

print(sns.scatterplot(data=df, x="households", y="population",
                      hue="total_rooms"))
"""
Axes(0.125,0.11;0.775x0.77)
"""
# plt.show()

print('*' * 79)
# Помимо обозначения дополнительного измерения цветом мы можем использовать
# size.
print(sns.scatterplot(data=df, x="households", y="population",
                      hue="total_rooms", size=10))
# plt.show()

cols = ['population', 'median_income', 'housing_median_age',
        'median_house_value']
g = sns.PairGrid(df[cols])
g.map(sns.scatterplot)
# plt.show()

print('*' * 79)
# Линейные графики
# Хорошо подойдут, если есть временная или какая-либо иная последовательность и
# значения, которые могут меняться в зависимости от нее. Для генерации линейных
# графиков в seaborn используется relplot функцию. Она также принимает
# DataFrame, x, y - столбцы.
# Для визуализации выбирается тип line:

# Можно видеть, что в определенных местах долготы цена за дома резко
# подскакивает.
print(sns.relplot(x="latitude", y="median_house_value", kind="line", data=df))
# plt.show()

print('*' * 79)
# Можно видеть, что в определенных местах долготы цена за дома резко
# подскакивает.
# Попробуем визуализировать longitude по отношения к median_house_value и поймем
# в чем же дело, почему цена так резко подскакивает.
print(sns.relplot(x='longitude', y='median_house_value', kind='line', data=df))
# plt.show()

print('*' * 79)
# Можно видеть, что в определенных местах широты цена за дома также очень
# высока.
# Используя точечный график можно визуализировать эти отношения с большей
# четкостью. Скорее всего резкий рост цен связан с близостью к ценному объекту,
# повышающему качество жизни, скорее всего побережью океана или реки.
print(sns.scatterplot(data=df, x="latitude", y="longitude",
                      hue="median_house_value"))
# plt.show()

print('*' * 79)
# Гистограмма
# Способ представления табличных данных в графическом виде — в виде столбчатой
# диаграммы. По оси x обычно указывают значение, а по оси y - встречаемость(кол-во
# таких значений в выборке)
print(sns.histplot(data=df, x="median_income"))
# plt.show()

print('*' * 79)
# Можно видеть что у большинства семей доход находится между значениями 2 и 6. И
# только очень небольшое количество людей обладают доходом > 10.
# Изобразим гистограмму по housing_median_age.

sns.histplot(data = df, x = 'housing_median_age')
plt.show()